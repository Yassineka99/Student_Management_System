/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Yassine
 */
 import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class Group_A extends javax.swing.JFrame {
String sql ="select * from student where group_n='A'";
String sql1="UPDATE student SET nb_abscence = nb_abscence+1 WHERE student_id = ?";
String abs ;
String name;
String last ;

    /**
     * Creates new form Group_A
     */
    public Group_A() {
        initComponents();
                 try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        try {
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
            Statement st=c.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next())
            {
                
                name=String.valueOf(rs.getString("student_first_name"));
                last=String.valueOf(rs.getString("student_last_name"));
                abs=String.valueOf(rs.getString("nb_abscence"));
                
            String tab[] ={name,last,abs};
            DefaultTableModel tm = (DefaultTableModel)jTable1.getModel();
            tm.addRow(tab);
            }
   
            c.close();
        } catch (SQLException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox20 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jCheckBox22 = new javax.swing.JCheckBox();
        jCheckBox23 = new javax.swing.JCheckBox();
        jCheckBox24 = new javax.swing.JCheckBox();
        jCheckBox27 = new javax.swing.JCheckBox();
        jCheckBox28 = new javax.swing.JCheckBox();
        jCheckBox29 = new javax.swing.JCheckBox();
        jCheckBox30 = new javax.swing.JCheckBox();
        jCheckBox31 = new javax.swing.JCheckBox();
        jCheckBox32 = new javax.swing.JCheckBox();
        Confirm = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Last Name", "Abscence"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, -1, 270));

        jCheckBox1.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox1.setText("present");
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 43, 100, 20));

        jCheckBox3.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox3.setText("Absent");
        getContentPane().add(jCheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 43, 100, 20));

        jCheckBox4.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox4.setText("Absent");
        getContentPane().add(jCheckBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 60, 100, 20));

        jCheckBox2.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox2.setText("present");
        getContentPane().add(jCheckBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 60, 100, 20));

        jCheckBox5.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox5.setText("present");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 76, 100, 20));

        jCheckBox6.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox6.setText("Absent");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox6, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 76, 100, 20));

        jCheckBox7.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox7.setText("Absent");
        getContentPane().add(jCheckBox7, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 92, 100, 20));

        jCheckBox8.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox8.setText("present");
        getContentPane().add(jCheckBox8, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 92, 100, 20));

        jCheckBox9.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox9.setText("present");
        getContentPane().add(jCheckBox9, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 155, 100, 20));

        jCheckBox10.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox10.setText("Absent");
        getContentPane().add(jCheckBox10, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 155, 100, 20));

        jCheckBox11.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox11.setText("Absent");
        jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox11ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox11, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 140, 100, 20));

        jCheckBox12.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox12.setText("present");
        jCheckBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox12ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox12, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 140, 100, 20));

        jCheckBox13.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox13.setText("present");
        getContentPane().add(jCheckBox13, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 124, 100, 20));

        jCheckBox14.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox14.setText("Absent");
        getContentPane().add(jCheckBox14, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 124, 100, 20));

        jCheckBox15.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox15.setText("Absent");
        getContentPane().add(jCheckBox15, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 108, 100, 20));

        jCheckBox16.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox16.setText("present");
        getContentPane().add(jCheckBox16, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 108, 100, 20));

        jCheckBox17.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox17.setText("present");
        getContentPane().add(jCheckBox17, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 172, 100, 20));

        jCheckBox18.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox18.setText("Absent");
        getContentPane().add(jCheckBox18, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 172, 100, 20));

        jCheckBox19.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox19.setText("Absent");
        getContentPane().add(jCheckBox19, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 187, 100, 20));

        jCheckBox20.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox20.setText("present");
        getContentPane().add(jCheckBox20, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 187, 100, 20));

        jCheckBox21.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox21.setText("present");
        jCheckBox21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox21ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox21, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 204, 100, 20));

        jCheckBox22.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox22.setText("Absent");
        jCheckBox22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox22ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox22, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 204, 100, 20));

        jCheckBox23.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox23.setText("Absent");
        getContentPane().add(jCheckBox23, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 220, 100, 20));

        jCheckBox24.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox24.setText("present");
        getContentPane().add(jCheckBox24, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 220, 100, 20));

        jCheckBox27.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox27.setText("Absent");
        jCheckBox27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox27ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox27, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 267, 100, 20));

        jCheckBox28.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox28.setText("present");
        jCheckBox28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox28ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox28, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 267, 100, 20));

        jCheckBox29.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox29.setText("present");
        getContentPane().add(jCheckBox29, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 252, 100, 20));

        jCheckBox30.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox30.setText("Absent");
        getContentPane().add(jCheckBox30, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 252, 100, 20));

        jCheckBox31.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox31.setText("Absent");
        getContentPane().add(jCheckBox31, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 235, 100, 20));

        jCheckBox32.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        jCheckBox32.setText("present");
        getContentPane().add(jCheckBox32, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 235, 100, 20));

        Confirm.setBackground(new java.awt.Color(204, 204, 255));
        Confirm.setFont(new java.awt.Font("Segoe Print", 0, 24)); // NOI18N
        Confirm.setText("Confirm");
        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });
        getContentPane().add(Confirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 390, 130, 60));

        Back.setBackground(new java.awt.Color(204, 204, 255));
        Back.setFont(new java.awt.Font("Segoe Print", 0, 24)); // NOI18N
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        getContentPane().add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 130, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/abstract-connections-banner-design-vector.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox11ActionPerformed

    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox12ActionPerformed

    private void jCheckBox21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox21ActionPerformed

    private void jCheckBox22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox22ActionPerformed

    private void jCheckBox27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox27ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox27ActionPerformed

    private void jCheckBox28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox28ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox28ActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        Teacher a = new Teacher();
        a.show();
        dispose();
    }//GEN-LAST:event_BackActionPerformed

    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
        // TODO add your handling code here:
        if (jCheckBox3.isSelected()&& !jCheckBox1.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,1);
                ps.executeUpdate();
                
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                if (jCheckBox4.isSelected()&& !jCheckBox2.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,2);
                ps.executeUpdate();
                
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                        if (jCheckBox6.isSelected()&& !jCheckBox5.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,3);
                ps.executeUpdate();
                
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                                if (jCheckBox7.isSelected()&& !jCheckBox8.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,4);
                ps.executeUpdate();
                
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                                        if (jCheckBox15.isSelected()&& !jCheckBox16.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,5);
                ps.executeUpdate();
                
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                                                if (jCheckBox14.isSelected()&& !jCheckBox13.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,6);
                ps.executeUpdate();
                
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                                                        if (jCheckBox11.isSelected()&& !jCheckBox12.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,7);
                ps.executeUpdate();
                
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                                                                if (jCheckBox10.isSelected()&& !jCheckBox9.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,8);
                ps.executeUpdate();
            
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                                                                        if (jCheckBox18.isSelected()&& !jCheckBox17.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,9);
                ps.executeUpdate();
             
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                                                                                if (jCheckBox19.isSelected()&& !jCheckBox20.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,10);
                ps.executeUpdate();
                
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                                                                                        if (jCheckBox22.isSelected()&& !jCheckBox21.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,11);
                ps.executeUpdate();
                
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                                                                                                if (jCheckBox23.isSelected()&& !jCheckBox24.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,12);
                ps.executeUpdate();
               
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                                                                                                        if (jCheckBox31.isSelected()&& !jCheckBox32.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,13);
                ps.executeUpdate();
                
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                                                                                                                if (jCheckBox30.isSelected()&& !jCheckBox29.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,14);
                ps.executeUpdate();
               
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
                                                                                                                        if (jCheckBox27.isSelected()&& !jCheckBox28.isSelected())
        {
             try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try {
                Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/student_management_system","root","12345") ;
                PreparedStatement ps= c.prepareStatement(sql1);
                ps.setInt(1,15);
                ps.executeUpdate();
              
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_ConfirmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Group_A.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Group_A.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Group_A.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Group_A.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Group_A().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Confirm;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox22;
    private javax.swing.JCheckBox jCheckBox23;
    private javax.swing.JCheckBox jCheckBox24;
    private javax.swing.JCheckBox jCheckBox27;
    private javax.swing.JCheckBox jCheckBox28;
    private javax.swing.JCheckBox jCheckBox29;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox30;
    private javax.swing.JCheckBox jCheckBox31;
    private javax.swing.JCheckBox jCheckBox32;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
